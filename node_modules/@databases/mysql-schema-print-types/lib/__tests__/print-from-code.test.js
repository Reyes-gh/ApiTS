"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const mysql_schema_introspect_1 = require("@databases/mysql-schema-introspect");
const printSchema_1 = require("../printers/printSchema");
const MySqlPrintOptions_1 = require("../MySqlPrintOptions");
const shared_print_types_1 = require("@databases/shared-print-types");
test('replace filter', async () => {
    const schema = {
        tables: [
            {
                schemaName: `my_schema`,
                tableType: mysql_schema_introspect_1.TableType.BaseTable,
                tableName: `my_table_my_name`,
                comment: ``,
                columns: [],
                constraints: [],
            },
        ],
    };
    const options = new MySqlPrintOptions_1.default({
        tableTypeName: '{{ TABLE_NAME | replace "my_" "" | singular | pascal-case }}',
        tableInsertParametersTypeName: '{{ TABLE_NAME | replace "^my_" "" | singular | pascal-case }}Insert',
    }, schema);
    const printContext = new shared_print_types_1.PrintContext(options);
    (0, printSchema_1.default)(schema, printContext, options);
    expect(printContext.getFiles()).toMatchInlineSnapshot(`
    Array [
      Object {
        "content": "import TableName, {TableMyNameInsert} from './my_table_my_name'

    interface DatabaseSchema {
      my_table_my_name: {record: TableName, insert: TableMyNameInsert};
    }
    export default DatabaseSchema;

    function serializeValue(_tableName: string, _columnName: string, value: unknown): unknown {
      return value;
    }
    export {serializeValue}
    ",
        "filename": "index.ts",
      },
      Object {
        "content": "interface TableMyNameInsert {
    }
    export type {TableMyNameInsert}

    interface TableName {
    }
    export default TableName;
    ",
        "filename": "my_table_my_name.ts",
      },
    ]
  `);
});
//# sourceMappingURL=print-from-code.test.js.map