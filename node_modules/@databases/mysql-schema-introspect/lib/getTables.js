"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.tableQuery = void 0;
const t = require("funtypes");
const mysql_1 = require("@databases/mysql");
const TableType_1 = require("./enums/TableType");
const TableSchema = t.Named(`Table`, t.Object({
    schemaName: t.String,
    tableName: t.String,
    tableType: t.Enum(`TableType`, TableType_1.default),
    comment: t.String,
}));
async function getTables(connection, query) {
    const conditions = tableQuery(query);
    const tables = await connection.query((0, mysql_1.sql) `
    SELECT
      TABLE_SCHEMA as "schema_name",
      TABLE_NAME as "table_name",
      TABLE_TYPE as "table_type",
      TABLE_COMMENT as "table_comment"
    FROM INFORMATION_SCHEMA.TABLES
    ${conditions.length ? (0, mysql_1.sql) `WHERE ${mysql_1.sql.join(conditions, (0, mysql_1.sql) ` AND `)}` : (0, mysql_1.sql) ``}
    ORDER BY TABLE_SCHEMA ASC, TABLE_NAME ASC;
  `);
    return tables
        .map((t) => {
        var _a;
        return ({
            schemaName: t.schema_name,
            tableName: t.table_name,
            tableType: t.table_type,
            // Views always have a comment of "VIEW", but that isn't very helpful.
            comment: t.table_type === TableType_1.default.BaseTable ? (_a = t.table_comment) !== null && _a !== void 0 ? _a : '' : '',
        });
    })
        .map((t) => TableSchema.parse(t));
}
exports.default = getTables;
function tableQuery(query) {
    const conditions = [];
    if (query.type) {
        if (Array.isArray(query.type)) {
            conditions.push((0, mysql_1.sql) `TABLE_TYPE IN (${mysql_1.sql.join(query.type.map((t) => (0, mysql_1.sql) `${t}`), (0, mysql_1.sql) `, `)})`);
        }
        else {
            conditions.push((0, mysql_1.sql) `TABLE_TYPE = ${query.type}`);
        }
    }
    if (query.schemaName) {
        conditions.push((0, mysql_1.sql) `TABLE_SCHEMA = ${query.schemaName}`);
    }
    if (query.tableName) {
        conditions.push((0, mysql_1.sql) `TABLE_NAME = ${query.tableName}`);
    }
    return conditions;
}
exports.tableQuery = tableQuery;
//# sourceMappingURL=getTables.js.map