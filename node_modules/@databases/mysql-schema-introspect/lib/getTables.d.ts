import * as t from 'funtypes';
import { Queryable } from '@databases/mysql';
import TableType from './enums/TableType';
export interface TableQuery {
    schemaName?: string;
    tableName?: string;
    type?: TableType | TableType[];
}
declare const TableSchema: t.Named<t.Object<{
    schemaName: t.String;
    tableName: t.String;
    tableType: t.Enum<typeof TableType>;
    comment: t.String;
}, false>>;
export declare type Table = t.Static<typeof TableSchema>;
export default function getTables(connection: Queryable, query: TableQuery): Promise<Table[]>;
export declare function tableQuery(query: TableQuery): import("@databases/sql/lib/web").SQLQuery[];
export {};
