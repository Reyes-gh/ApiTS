"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const mysql_1 = require("@databases/mysql");
const TableType_1 = require("../enums/TableType");
const getTables_1 = require("../getTables");
const db = (0, mysql_1.default)({ bigIntMode: 'number' });
test('getTables', async () => {
    await db.query((0, mysql_1.sql) `
      CREATE TABLE get_tables_table_a (id BIGINT NOT NULL PRIMARY KEY);
      CREATE TABLE get_tables_table_b (id BIGINT NOT NULL PRIMARY KEY);
      CREATE VIEW get_tables_view_b AS SELECT * FROM get_tables_table_b;

      ALTER TABLE get_tables_table_b COMMENT = 'This is a great table';
    `);
    expect((await (0, getTables_1.default)(db, {
        schemaName: 'test-db',
        type: [TableType_1.default.BaseTable, TableType_1.default.View],
    })).filter((t) => t.tableName.startsWith(`get_tables`))).toMatchInlineSnapshot(`
    Array [
      Object {
        "comment": "",
        "schemaName": "test-db",
        "tableName": "get_tables_table_a",
        "tableType": "BASE TABLE",
      },
      Object {
        "comment": "This is a great table",
        "schemaName": "test-db",
        "tableName": "get_tables_table_b",
        "tableType": "BASE TABLE",
      },
      Object {
        "comment": "",
        "schemaName": "test-db",
        "tableName": "get_tables_view_b",
        "tableType": "VIEW",
      },
    ]
  `);
    await db.dispose();
});
//# sourceMappingURL=getTables.test.mysql.js.map